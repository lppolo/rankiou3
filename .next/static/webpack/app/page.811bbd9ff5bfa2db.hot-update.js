"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/usePolls.ts":
/*!*******************************!*\
  !*** ./src/hooks/usePolls.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   favoritePoll: function() { return /* binding */ favoritePoll; },\n/* harmony export */   useAdvertisements: function() { return /* binding */ useAdvertisements; },\n/* harmony export */   usePolls: function() { return /* binding */ usePolls; },\n/* harmony export */   voteOnPoll: function() { return /* binding */ voteOnPoll; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n\n\nconst usePolls = (scope, city)=>{\n    const [polls, setPolls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const load = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        let mounted = true;\n        setLoading(true);\n        setError(null);\n        try {\n            let query = _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"polls\").select(\"\\n            id, title, image_url, category, type, scope, location_city, total_votes, created_at,\\n            status, moderation_reason, author_id,\\n            poll_options(text, votes),\\n            profiles:author_id(name, avatar_url)\\n          \").order(\"created_at\", {\n                ascending: false\n            });\n            if (scope) query = query.eq(\"scope\", scope);\n            if (scope && scope !== \"MUNDO\" && city) query = query.eq(\"location_city\", city);\n            const { data, error: err } = await query;\n            if (err) throw err;\n            const mapped = (data || []).map((p)=>{\n                var _p_profiles, _p_profiles1;\n                return {\n                    id: p.id,\n                    title: p.title,\n                    image_url: p.image_url,\n                    category: p.category,\n                    type: p.type,\n                    scope: p.scope,\n                    location_city: p.location_city,\n                    options: (p.poll_options || []).map((o)=>({\n                            text: o.text,\n                            votes: o.votes\n                        })),\n                    total_votes: p.total_votes,\n                    created_at: p.created_at,\n                    author: {\n                        id: p.author_id,\n                        name: ((_p_profiles = p.profiles) === null || _p_profiles === void 0 ? void 0 : _p_profiles.name) || \"Usu\\xe1rio\",\n                        avatar_url: ((_p_profiles1 = p.profiles) === null || _p_profiles1 === void 0 ? void 0 : _p_profiles1.avatar_url) || \"\"\n                    },\n                    status: p.status,\n                    moderation_reason: p.moderation_reason,\n                    userVote: null,\n                    isFavorited: false\n                };\n            });\n            if (!mounted) return;\n            setPolls(mapped);\n        } catch (e) {\n            if (!mounted) return;\n            setError(e.message || \"Erro ao carregar enquetes\");\n        } finally{\n            if (mounted) setLoading(false);\n        }\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        scope,\n        city\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const cleanup = load();\n        return ()=>{\n            if (typeof cleanup === \"function\") cleanup();\n        };\n    }, [\n        load\n    ]);\n    return {\n        polls,\n        loading,\n        error,\n        reload: load\n    };\n};\nconst voteOnPoll = async (pollId, optionText)=>{\n    const { error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__.supabase.rpc(\"vote_on_poll\", {\n        p_poll_id: pollId,\n        p_option_text: optionText\n    });\n    if (error) throw error;\n    return {\n        ok: true\n    };\n};\nconst favoritePoll = async (pollId)=>{\n    const { data, error } = await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__.supabase.rpc(\"toggle_favorite\", {\n        p_poll_id: pollId\n    });\n    if (error) throw error;\n    return {\n        ok: true,\n        favorited: !!data\n    };\n};\nconst useAdvertisements = (scope, city)=>{\n    const [ads, setAds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        const load = async ()=>{\n            let q = _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"advertisements\").select(\"*\").eq(\"status\", \"ACTIVE\");\n            if (scope) q = q.eq(\"scope\", scope);\n            if (scope === \"LOCAL\" && city) q = q.eq(\"location_city\", city);\n            const { data } = await q;\n            if (!mounted) return;\n            setAds(data || []);\n        };\n        load();\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        scope,\n        city\n    ]);\n    return ads;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/usePolls.ts\n"));

/***/ })

});